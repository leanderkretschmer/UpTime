---
- name: Setup Monitoring System
  hosts: monitoring_server
  become: yes
  vars:
    git_repo: "https://github.com/leanderkretschmer/UpTime/"
    tmp_dir: "/tmp/monitoring_setup"
    frontend_dir: "/opt/monitoring/frontend"
    backend_dir: "/opt/monitoring/backend"
    python_version: "3.8"
    node_version: "16"

  tasks:
    - name: Install required packages
      apt:
        name:
          - git
          - python3
          - python3-pip
          - python3-venv
          - nodejs
          - npm
          - postgresql
          - postgresql-contrib
          - rsync
        state: present
        update_cache: yes

    - name: Remove old temporary directory if exists
      file:
        path: "{{ tmp_dir }}"
        state: absent

    - name: Create temporary directory
      file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: '0755'

    - name: Clone repository
      git:
        repo: "{{ git_repo }}"
        dest: "{{ tmp_dir }}"
        version: main

    - name: Create backend directory
      file:
        path: "{{ backend_dir }}"
        state: directory
        mode: '0755'

    - name: Create frontend directory
      file:
        path: "{{ frontend_dir }}"
        state: directory
        mode: '0755'

    - name: Copy backend files
      command: "cp -r {{ tmp_dir }}/backend/* {{ backend_dir }}/"
      ignore_errors: yes

    - name: Copy frontend files
      command: "cp -r {{ tmp_dir }}/frontend/* {{ frontend_dir }}/"
      ignore_errors: yes

    - name: Create requirements.txt
      copy:
        dest: "{{ backend_dir }}/requirements.txt"
        content: |
          flask==2.0.1
          flask-cors==3.0.10
          flask-jwt-extended==4.3.1
          flask-sqlalchemy==2.5.1
          psycopg2-binary==2.9.1
          ansible-runner==2.1.1
          python-dotenv==0.19.0
          gunicorn==20.1.0

    - name: Setup Python virtual environment
      pip:
        requirements: "{{ backend_dir }}/requirements.txt"
        virtualenv: "{{ backend_dir }}/venv"
        virtualenv_command: python3 -m venv

    - name: Install frontend dependencies
      npm:
        path: "{{ frontend_dir }}"
        state: present

    - name: Build frontend
      command: npm run build
      args:
        chdir: "{{ frontend_dir }}"

    - name: Initialize database
      command: "{{ backend_dir }}/venv/bin/python {{ backend_dir }}/init_db.py"
      environment:
        PYTHONPATH: "{{ backend_dir }}"

    - name: Clean up temporary directory
      file:
        path: "{{ tmp_dir }}"
        state: absent

    - name: Create systemd service for backend
      template:
        src: backend.service.j2
        dest: /etc/systemd/system/monitoring-backend.service
      notify: Restart backend service

  handlers:
    - name: Restart backend service
      systemd:
        name: monitoring-backend
        state: restarted
        daemon_reload: yes
        enabled: yes 